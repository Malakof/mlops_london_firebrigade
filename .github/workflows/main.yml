# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  
  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
  

      - name: Activate virtualenv
        run: |
            cd ..
            ls -l
            python -m venv ./venv
            source venv/bin/activate
            echo PATH=$PATH >> $GITHUB_ENV
        
      # - name: Linters
      #   run: |
      #     sudo apt install pre-commit 
      #     pre-commit
        
      - name: Install dependencies
        run: |
            cd ../mlops_london_firebrigade
            pip install -r requirements.txt
    
      - name: Test with unitest
        run: |
            cd ../mlops_london_firebrigade/scripts
            ./tests_api.sh
           
           
           # python -m unittest discover -s tests

  #  docker:
  #    steps:
  #       runs-on: ubuntu-latest
  #     - name: build with docker compose
  #       run: |
  #                docker compose build api_gateway
  #                docker compose run api_gateway              
  #                docker compose build process_data_service
  #                docker compose run process_data_service
  #                docker compose build build_features_service
  #                docker compose run process_data_service
  #                docker compose build train_model_service
  #                docker compose run train_model_service
  #                docker compose build predict_service
  #                docker compose run predict_service
  #                docker compose build grafana_service
  #                docker compose run grafana_service 
  #                docker compose build prometheus_service 
  #                docker compose run prometheus_service   
                 


