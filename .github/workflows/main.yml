# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  
  checkout-test:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
  

      - name: Activate virtualenv
        run: |
            cd ..
            ls -l
            python3 -m venv ./venv
            source venv/bin/activate
            echo PATH=$PATH >> $GITHUB_ENV
        
      # - name: Linters
      #   run: |
      #     sudo apt install pre-commit 
      #     pre-commit
        
      - name: Install dependencies
        run: |
            cd ../mlops_london_firebrigade
            pip3 install -r requirements.txt
    
      - name: Test with unitest
        run: |
            cd ../mlops_london_firebrigade

          # python3 -m http.server
          # python3 -m unittest tests.test_api

          # python3 -m unittest tests.test_build_features
          # python3 -m unittest tests.test_data_processing
          # python3 -m unittest tests.test_predict_model
          # python3 -m unittest tests.test_train_model


  build:
      runs-on: ubuntu-latest
      steps:
        -
          name: Checkout
          uses: actions/checkout@v4
        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v3
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        -
          name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
                    username: ${{ secrets.USERNAME }}
                    password: ${{ secrets.PASSWORD }}
        -
          name: Build and push api_gateway
          uses: docker/build-push-action@v6
          with:
              context: ../mlops_london_firebrigade/src/api/api_gateway
              push: true
              tags: orvm/mlops_firebrigade:latest

        -
           name: Build and push predict
           uses: docker/build-push-action@v6
           with:
              context: ../mlops_london_firebrigade/src/api/microservices/predict_service
              push: true
              tags: orvm/mlops_firebrigade:latest

        -  name: Build and push process_data
           uses: docker/build-push-action@v6
           with:
             context: ../mlops_london_firebrigade/src/api/microservices/process_data_service
             push: true
             tags: orvm/mlops_firebrigade:latest

        -  name: Build and push train_model
           uses: docker/build-push-action@v6
           with:
               context: ../mlops_london_firebrigade/src/api/microservices/train_model_service
               push: true
               tags: ${{ secrets.USERNAME }}/orvm/mlops_firebrigade:latest

        -  name: Build and push build_features
           uses: docker/build-push-action@v6
           with:
             context: ../mlops_london_firebrigade/src/api/microservices/build_features_service
             push: true
             tags: orvm/mlops_firebrigade:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: '<env>'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:
  #     - name: Lowercase the repo name
  #       run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@<app_tag>
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
  #         images: 'https://hub.docker.com/repository/docker/orvm/${{ env.REPO }}:${{ github.sha }}'






